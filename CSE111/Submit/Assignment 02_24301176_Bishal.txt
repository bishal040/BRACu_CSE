//Task 01

public class UniversityTester {
    public static void main(String[] args) {
        University Brac = new University();
        University NSU = new University();
        System.out.println(Brac);
        System.out.println(NSU);
        System.out.println(Brac.name);
        System.out.println(Brac.country);
        System.out.println(NSU.name);
        System.out.println(NSU.country);
        //NO the location of the objects are not the same
        Brac.name = "Imperial College London" ;
        Brac.country ="England";
        NSU.name = "Brac University";
        NSU.country = "Bangladesh";
        System.out.println(Brac.name);
        System.out.println(Brac.country);
        System.out.println(NSU.name);
        System.out.println(NSU.country);
        //the instance variables of both objects are not the same valu
    }
    
}


//Task 02


public class Student {
    public String name = " Default";
    public int id;
}


//Task 03


public class CSECourse{
    public String courseName = "Programming Language II";
    public String courseCode = "CSE111";
    public int credit = 3; 

}


//Task 04


public class ImaginaryNumber{
  public int realPart = 0;
  public int imaginaryPart = 0;
  public void printNumber()
  {
    System.out.println(this.realPart + " + " + imaginaryPart +"i");
  }
}


//Task 05


public class Course{
 public String courseName;
 public String courseCode;
 public int credit;
 public void updateDetails(String N,String C, int c1)
 {
 this.courseName = N;
 this.courseCode = C;
 this.credit = c1;
 }
 public void displayCourse()
 {
   System.out.println("Course Name:");
   System.out.println(this.courseName);
   System.out.println("Course Code: " + this.courseCode);
  
   System.out.println("Course Credit: " + this.credit);
  
 }
}


//Task 06


public class Assignment {
    public int tasks;
    public String difficulty;
    public boolean submission;
    public void printDetails(){

        System.out.println("Number of tasks: " + tasks);
        System.out.println("Difficulty level: " + difficulty);
        System.out.println("Submission required: " + submission);
    }
    public String makeOptional(){
        
        if(this.submission==true)
        {
        this.submission =false;
        return "Assignment will not require submission";
        }
        else{
            return "Submission is already not required";
        }
    }
}


//Task 07


public class CellPhone
{
  public String model ="unknown";
  public int count = 0;
  public String[] contact = new String[3];
  public void printDetails()
  {
  System.out.println("Phone Model " + this.model);
  
  
  if(count!=0)
  {
    System.out.println("Contacts Stored " + count);
    System.out.println("Stored Contacts: ");
    for(int i = 0;i<contact.length;i++)
    {
      if(i<count)
      {
    System.out.println(contact[i]);
      }
     else{
      break;
      }
    }
  }
  else{
     System.out.println("Contacts Stored " + count);
  }
  }
  public void storeContact(String str)
  {
    if(count<=2)
    {
       contact[count]= str;
       count++;
      System.out.println("Contact Stored");
    }
    else
    {
      System.out.println("Memory full. New contact can't be stored. "); 
    }
  }
}


//Task 08


public class Employee {
    public String name;
    public double salary = 30000;
    public String Designation = "junior";
    public void newEmployee(String N)
    {
        this.name=N;
        
    }
    public void displayInfo(){
        System.out.println("Employee Name: " + name);
        System.out.println("Employee Salary: " + salary + " Tk");
        System.out.println("Employee Designation: " + Designation);
    }
    public void calculateTax(){
        if(salary>50000)
        {
            System.out.println(this.name + " Tax Amount: " + salary*0.3);
        }
        else if(salary>30000)
        {
            System.out.println(this.name + " Tax Amount: " + salary*0.1);
        }
        else
        {
            System.out.println("No need to pay tax");
        }

    }
    public void promoteEmployee(String N)
    {
        if(this.Designation!=N)
        {
            this.Designation=N;
            if(this.Designation.equals("senior"))
            {
                salary += 25000;
            }
            else if(this.Designation.equals("lead"))
            {
                salary += 50000;
            }
            else if(this.Designation.equals("manager"))
            {
                salary += 75000;
            }
            System.out.println(this.name + " has been promoted to " + Designation );
            System.out.println("New Salary: " + salary + " Tk");
        }
        else{
            System.out.println("Can not Promote to same Designation");
        }
    }
}
